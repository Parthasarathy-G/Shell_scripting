What is Shell?

A shell is a special user program that provides an interface for the user to use operating system services. 
Shell accepts human-readable commands from users and converts them into something which the kernel can understand. 
It is a command language interpreter that executes commands read from input devices such as keyboards or from files. 
The shell gets started when the user logs in or starts the terminal.


Shell is broadly classified into two categories –

Command Line Shell
Graphical shell

There are several shells are available for Linux systems like –

BASH (Bourne Again SHell) – It is the most widely used shell in Linux systems. It is used as default login shell in Linux systems and in macOS. 
It can also be installed on Windows OS.

CSH (C SHell) – The C shell’s syntax and its usage are very similar to the C programming language.

KSH (Korn SHell) – The Korn Shell was also the base for the POSIX Shell standard specifications etc.


A shell script has syntax just like any other programming language. If you have any prior experience with any programming language like Python, C/C++ etc. It would be very easy to get started with it.

A shell script comprises the following elements –

Shell Keywords – if, else, break etc.
Shell commands – cd, ls, echo, pwd, touch etc.
Functions
Control flow – if..then..else, case and shell loops etc.


A shell variable is a character string in a shell that stores some value. It could be an integer, filename, string, or some shell command itself. Basically, it is a pointer to the actual data stored in memory. We have a few rules that have to be followed while writing variables in the script (which will be discussed in the article). Overall knowing the shell variable scripting leads us to write strong and good shell scripts.

Rules for variable definition
 A variable name could contain any alphabet (a-z, A-Z), any digits (0-9), and an underscore ( _ ). However, a variable name must start with an alphabet or underscore. It can never start with a number. Following are some examples of valid and invalid variable names:

Valid Variable Names

ABC
_AV_3
AV232


Invalid variable names 

2_AN
!ABD
$ABC
&QAID